import { debug } from "debug";
import { createLogger } from "../createLogger";
import { createEventHandler } from "../event-handler/index";
import { middleware } from "./middleware";
export function createMiddleware(options) {
    if (!options || !options.secret) {
        throw new Error("[@octokit/webhooks] options.secret required");
    }
    const state = {
        eventHandler: createEventHandler(options),
        path: options.path || "/",
        secret: options.secret,
        hooks: {},
        log: createLogger(options.log || { debug: debug("webhooks:receiver") }),
    };
    const api = middleware.bind(null, state);
    api.on = state.eventHandler.on;
    api.removeListener = state.eventHandler.removeListener;
    return api;
}
