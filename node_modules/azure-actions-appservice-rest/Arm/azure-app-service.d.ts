import { ServiceClient } from 'azure-actions-webclient/AzureRestClient';
import { IAuthorizer } from 'azure-actions-webclient/Authorizer/IAuthorizer';
interface AzureAppServiceConfigurationDetails {
    id: string;
    name: string;
    type: string;
    kind?: string;
    location: string;
    tags: string;
    properties?: {
        [key: string]: any;
    };
}
export declare const WebsiteEnableSyncUpdateSiteKey: string;
export declare class AzureAppService {
    private _resourceGroup;
    private _name;
    private _slot;
    private _slotUrl;
    _client: ServiceClient;
    private _appServiceConfigurationDetails;
    private _appServicePublishingProfile;
    private _appServiceApplicationSetings;
    private _appServiceConfigurationSettings;
    private _appServiceConnectionString;
    private _isConsumptionApp;
    constructor(endpoint: IAuthorizer, resourceGroup: string, name: string, slot?: string, appKind?: string, isConsumptionApp?: boolean);
    get(force?: boolean): Promise<AzureAppServiceConfigurationDetails>;
    restart(): Promise<void>;
    getPublishingProfileWithSecrets(force?: boolean): Promise<any>;
    getPublishingCredentials(): Promise<any>;
    getApplicationSettings(force?: boolean): Promise<AzureAppServiceConfigurationDetails>;
    updateApplicationSettings(applicationSettings: any): Promise<AzureAppServiceConfigurationDetails>;
    patchApplicationSettings(addProperties: any, deleteProperties?: any): Promise<boolean>;
    patchApplicationSettingsSlot(addProperties: any): Promise<boolean>;
    syncFunctionTriggersViaHostruntime(): Promise<any>;
    getConfiguration(): Promise<AzureAppServiceConfigurationDetails>;
    updateConfiguration(applicationSettings: any): Promise<AzureAppServiceConfigurationDetails>;
    patchConfiguration(properties: any): Promise<any>;
    getConnectionStrings(force?: boolean): Promise<AzureAppServiceConfigurationDetails>;
    getSlotConfigurationNames(force?: boolean): Promise<AzureAppServiceConfigurationDetails>;
    patchConnectionString(addProperties: any): Promise<boolean>;
    updateConnectionStrings(connectionStringSettings: any): Promise<AzureAppServiceConfigurationDetails>;
    patchConnectionStringSlot(addProperties: any): Promise<any>;
    updateSlotConfigSettings(SlotConfigSettings: any): Promise<AzureAppServiceConfigurationDetails>;
    getMetadata(): Promise<AzureAppServiceConfigurationDetails>;
    updateMetadata(applicationSettings: any): Promise<AzureAppServiceConfigurationDetails>;
    patchMetadata(properties: any): Promise<void>;
    getSlot(): string;
    private _getPublishingProfileWithSecrets;
    private _getApplicationSettings;
    private _getConnectionStrings;
    private _getSlotConfigurationNames;
    private _get;
    private _getFormattedName;
    getName(): string;
    private _sleep;
}
export {};
